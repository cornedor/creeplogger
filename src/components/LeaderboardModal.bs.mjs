// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Button from "./Button.bs.mjs";
import * as Players from "../helpers/Players.bs.mjs";
import * as DartsIcon from "./DartsIcon.bs.mjs";
import * as SoccerIcon from "./SoccerIcon.bs.mjs";
import * as OpenSkillRating from "../helpers/OpenSkillRating.bs.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function LeaderboardModal(props) {
  var setGameMode = props.setGameMode;
  var gameMode = props.gameMode;
  var setShow = props.setShow;
  var match = React.useState(function () {
        return false;
      });
  var setOrder = match[1];
  var ascOrder = match[0];
  var players = Players.useAllPlayers(gameMode === "Darts" ? "dartsElo" : "rating", ascOrder);
  var position = {
    contents: 0
  };
  var previousScore = {
    contents: 0
  };
  var skipped = {
    contents: 0
  };
  var tmp;
  tmp = setGameMode !== undefined ? (
      gameMode === "Foosball" ? JsxRuntime.jsx("button", {
              children: JsxRuntime.jsx(SoccerIcon.make, {}),
              className: "text-white w-[44px] aspect-square text-[26px] flex justify-center items-center rounded-full bg-black/0 transition-all ease-in-out duration-200 shadow-none hover:bg-black/20 hover:shadow-icon-button hover:ring-8 ring-black/20 active:bg-black/20 active:shadow-icon-button active:ring-8",
              onClick: (function (param) {
                  setGameMode(function (param) {
                        return "Darts";
                      });
                })
            }) : JsxRuntime.jsx("button", {
              children: JsxRuntime.jsx(DartsIcon.make, {}),
              className: "text-white w-[44px] aspect-square text-[26px] flex justify-center items-center rounded-full bg-black/0 transition-all ease-in-out duration-200 shadow-none hover:bg-black/20 hover:shadow-icon-button hover:ring-8 ring-black/20 active:bg-black/20 active:shadow-icon-button active:ring-8",
              onClick: (function (param) {
                  setGameMode(function (param) {
                        return "Foosball";
                      });
                })
            })
    ) : null;
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("header", {
                      children: [
                        JsxRuntime.jsx(Button.make, {
                              variant: "Blue",
                              onClick: (function (param) {
                                  setShow(function (s) {
                                        return !s;
                                      });
                                }),
                              children: "Terug"
                            }),
                        tmp
                      ],
                      className: "flex items-center gap-5"
                    }),
                JsxRuntime.jsxs("table", {
                      children: [
                        JsxRuntime.jsx("thead", {
                              children: JsxRuntime.jsxs("tr", {
                                    children: [
                                      JsxRuntime.jsx("th", {
                                            children: "#",
                                            className: "text-lg text-left",
                                            style: {
                                              width: "40px"
                                            }
                                          }),
                                      JsxRuntime.jsx("th", {
                                            children: "Speler",
                                            className: "text-lg text-left"
                                          }),
                                      JsxRuntime.jsx("th", {
                                            children: JsxRuntime.jsx("button", {
                                                  children: "Score " + (
                                                    ascOrder ? "↑" : "↓"
                                                  ),
                                                  onClick: (function (param) {
                                                      setOrder(function (order) {
                                                            return !order;
                                                          });
                                                    })
                                                }),
                                            className: "text-lg text-left"
                                          }),
                                      JsxRuntime.jsx("th", {
                                            children: "Last 5",
                                            className: "text-lg text-left"
                                          }),
                                      JsxRuntime.jsx("th", {
                                            children: "G/W",
                                            className: "text-lg text-left"
                                          }),
                                      JsxRuntime.jsx("th", {
                                            children: "Win%",
                                            className: "text-lg text-left"
                                          })
                                    ]
                                  })
                            }),
                        JsxRuntime.jsx("tbody", {
                              children: players.filter(function (player) {
                                      var match = player.hidden;
                                      var isHidden = match !== undefined && match ? false : true;
                                      var match$1;
                                      match$1 = gameMode === "Foosball" ? [
                                          player.ordinal,
                                          player.games
                                        ] : [
                                          player.dartsElo,
                                          player.dartsGames
                                        ];
                                      var isLowGameCount = match$1[1] > 5;
                                      var isLowRating = match$1[0] > 0.0;
                                      if (isHidden && isLowGameCount) {
                                        return isLowRating;
                                      } else {
                                        return false;
                                      }
                                    }).map(function (player) {
                                    var match;
                                    match = gameMode === "Foosball" ? [
                                        player.ordinal,
                                        player.lastEloChange,
                                        player.lastGames,
                                        player.wins,
                                        player.games
                                      ] : [
                                        player.dartsElo,
                                        player.dartsLastEloChange,
                                        player.dartsLastGames,
                                        player.dartsWins,
                                        player.dartsGames
                                      ];
                                    var games = match[4];
                                    var wins = match[3];
                                    var lastRatingChange = match[1];
                                    var roundedRating = OpenSkillRating.roundScore(match[0]);
                                    var match$1 = previousScore.contents;
                                    var match$2 = skipped.contents;
                                    if (roundedRating === match$1) {
                                      skipped.contents = skipped.contents + 1 | 0;
                                    } else if (match$2 > 0) {
                                      position.contents = (position.contents + skipped.contents | 0) + 1 | 0;
                                      skipped.contents = 0;
                                    } else {
                                      position.contents = position.contents + 1 | 0;
                                    }
                                    previousScore.contents = roundedRating;
                                    return JsxRuntime.jsxs("tr", {
                                                children: [
                                                  JsxRuntime.jsx("td", {
                                                        children: position.contents.toString(),
                                                        className: "font-semibold"
                                                      }),
                                                  JsxRuntime.jsx("td", {
                                                        children: player.name
                                                      }),
                                                  JsxRuntime.jsxs("td", {
                                                        children: [
                                                          roundedRating,
                                                          " ",
                                                          gameMode === "Foosball" ? JsxRuntime.jsx("small", {
                                                                className: lastRatingChange > 0.0 ? "text-green-400" : "text-red-400",
                                                                title: "Elo: " + (player.elo | 0),
                                                                children: OpenSkillRating.roundScore(lastRatingChange)
                                                              }) : JsxRuntime.jsx("small", {
                                                                className: lastRatingChange > 0.0 ? "text-green-400" : "text-red-400",
                                                                children: OpenSkillRating.roundScore(lastRatingChange)
                                                              })
                                                        ]
                                                      }),
                                                  JsxRuntime.jsx("td", {
                                                        children: JsxRuntime.jsx("div", {
                                                              children: player.lastGames.map(function (win, i) {
                                                                    return JsxRuntime.jsx("span", {
                                                                                className: "w-1 h-1 rounded block " + (
                                                                                  win === 1 ? "bg-green-400" : "bg-red-400"
                                                                                ),
                                                                                key: String(i)
                                                                              });
                                                                  }),
                                                              className: "inline-flex gap-1 w-9"
                                                            })
                                                      }),
                                                  JsxRuntime.jsxs("td", {
                                                        children: [
                                                          games,
                                                          ":",
                                                          wins
                                                        ]
                                                      }),
                                                  JsxRuntime.jsxs("td", {
                                                        children: [
                                                          Math.round(wins / games * 100),
                                                          "%"
                                                        ]
                                                      })
                                                ]
                                              }, player.key);
                                  })
                            })
                      ],
                      className: "table-fixed w-full mt-8"
                    })
              ],
              className: "modal",
              style: {
                transform: props.show ? "translateX(0)" : "translateX(-100%)"
              }
            });
}

var make = LeaderboardModal;

export {
  make ,
}
/* react Not a pure module */
