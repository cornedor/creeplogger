// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Vitest from "./Vitest.bs.mjs";
import * as OpenSkill from "../src/helpers/OpenSkill.bs.mjs";
import * as OpenSkillRating from "../src/helpers/OpenSkillRating.bs.mjs";

function makePlayer(muOpt, sigmaOpt, param) {
  var mu = muOpt !== undefined ? muOpt : 25.0;
  var sigma = sigmaOpt !== undefined ? sigmaOpt : 8.333;
  return {
          name: "p",
          wins: 0,
          losses: 0,
          absoluteWins: 0,
          absoluteLosses: 0,
          games: 0,
          teamGoals: 0,
          teamGoalsAgainst: 0,
          blueGames: 0,
          redGames: 0,
          blueWins: 0,
          redWins: 0,
          elo: 1000.0,
          lastEloChange: 0.0,
          key: "k",
          mattermostHandle: undefined,
          lastGames: [],
          hidden: undefined,
          mu: mu,
          sigma: sigma,
          ordinal: 0.0,
          lastOpenSkillChange: 0.0,
          dartsElo: 1000.0,
          dartsLastEloChange: 0.0,
          dartsGames: 0,
          dartsWins: 0,
          dartsLosses: 0,
          dartsLastGames: []
        };
}

Vitest.describe("OpenSkillRating", (function () {
        Vitest.test("calculateScore updates mu/sigma and returns average delta", (function () {
                var winners = [makePlayer(27.0, 8.0, undefined)];
                var losers = [makePlayer(23.0, 9.0, undefined)];
                var fakeRateGame = function (_winners, _losers) {
                  return [
                          [OpenSkill.createRating(28.0, 7.9, undefined)],
                          [OpenSkill.createRating(22.0, 9.1, undefined)]
                        ];
                };
                var match = OpenSkillRating.calculateScore(winners, losers, "Foosball", fakeRateGame);
                var uw = match[0][0];
                var ul = match[1][0];
                Vitest.expectFloatCloseTo(uw.mu, 28.0);
                Vitest.expectFloatCloseTo(uw.sigma, 7.9);
                Vitest.expectFloatCloseTo(ul.mu, 22.0);
                Vitest.expectFloatCloseTo(ul.sigma, 9.1);
                var newOrdinal = 28.0 - 3.0 * 7.9;
                Vitest.expectFloatCloseTo(match[2], newOrdinal);
                Vitest.expectFloatCloseTo(uw.lastOpenSkillChange, newOrdinal);
              }));
        Vitest.test("toDisplayDelta and toDisplayOrdinal scale values by 60 and round", (function () {
                Vitest.expectIntEqual(OpenSkillRating.toDisplayDelta(1.2), 72);
                Vitest.expectIntEqual(OpenSkillRating.toDisplayDelta(1.5), 90);
                Vitest.expectIntEqual(OpenSkillRating.toDisplayOrdinal(2.0), 120);
              }));
        Vitest.test("roundScore rounds to nearest int", (function () {
                Vitest.expectIntEqual(OpenSkillRating.roundScore(2.2), 2);
                Vitest.expectIntEqual(OpenSkillRating.roundScore(2.5), 3);
              }));
      }));

export {
  makePlayer ,
}
/*  Not a pure module */
